version: 2

workflows:
  version: 2
  build:
    jobs:
      - backends
      - frontend

jobs:
  backends:
    docker:
      - image: circleci/openjdk:11-jdk-sid
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          key: enterprise-beers-{{ .Branch }}-{{ checksum "pom.xml" }}
      - save_cache:
          paths:
            - ~/.m2
            - ~/.sonar/cache
          key: enterprise-beers-{{ .Branch }}-{{ checksum "pom.xml" }}
      - run:
          name: Build software
          command: |
            mvn \
              clean org.jacoco:jacoco-maven-plugin:prepare-agent verify sonar:sonar \
              -Dsonar.projectKey=mthmulders_enterprise-beers \
              -Dsonar.organization=mthmulders-github \
              -Dsonar.host.url=https://sonarcloud.io \
              -Dsonar.login=$SONAR_LOGIN
      - run:
          name: Save test results
          command: |
            mkdir -p ~/junit/
            find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/junit/ \;
            find . -type f -regex ".*/target/failsafe-reports/.*xml" -exec cp {} ~/junit/ \;
          when: always
      - store_test_results:
          path: ~/junit
      - run:
          name: Login to Azure Container Registry
          command: docker login enterprisebeers.azurecr.io -u $AZ_SP_ID -p $AZ_SP_PASSWORD
      - run:
          name: Push OpenLiberty container
          command: |
            mvn clean package \
              -Pdocker,circleci \
              -pl openliberty-java11-docker
      - run:
          name: Push application containers
          command: |
            mvn clean package \
              -Pdocker,circleci \
              -pl \!openliberty-java11-docker \
              -Ddockerfile.tag=1.0.${CIRCLE_BUILD_NUM}
  frontend:
    docker:
      - image: circleci/node:10.15.0-stretch
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Login to Azure Container Registry
          command: |
            docker login futbolin.azurecr.io -u $AZ_SP_ID -p $AZ_SP_PASSWORD
      - run:
          name: Build container
          command: |
            pushd frontend
            ./build-container.sh $CIRCLE_BUILD_NUM
